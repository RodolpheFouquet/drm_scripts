# test_ezdrm.py
from ezdrm import EZDrm, PLAYREADY_SYSID, WIDEVINE_SYSID
import requests_mock
import xmltodict

def test_init():
    d = EZDrm("https://test", "kid", "content", "user", "passwd")
    assert d.url == "https://test"
    assert d.kid == "kid"
    assert d.contentId == "content"
    assert d.user == "user"
    assert d.password == "passwd"


def test_fetch():
    with requests_mock.Mocker() as m:
        m.get(
            "https://test?c=content&k=kid&u=user&p=passwd",
            text=open("tests/data.xml").read(),
        )
        d = EZDrm("https://test", "kid", "content", "user", "passwd")
        d.fetch()
        expected = xmltodict.parse(open("tests/data.xml").read())
        assert d.content_dict == expected


def test_parse():
    d = EZDrm("https://test", "kid", "content", "user", "passwd")
    d.content_dict = xmltodict.parse(open("tests/data.xml").read())
    d.parseKeys()

    assert d.version == "2.3"
    assert d.contentId == "Mp4box-test01"
    assert d.explicitIV == "B44F9E302FB649B4990F01F3FC4BFE2D"
    assert d.secretKey == "7103438F487FB7AB0BFAF18FF19677F8"
    assert (
        base64.b64decode(d.psshList[WIDEVINE_SYSID].encode("ascii")).hex().upper()
        == "0000003F7073736800000000EDEF8BA979D64ACEA3C827DCD51D21ED0000001F1210B44F9E302FB649B4990F01F3FC4BFE2D1A05657A64726D48E3DC959B06"
    )
    assert (
        base64.b64decode(d.psshList[PLAYREADY_SYSID].encode("ascii")).hex().upper()

    )
    assert d.widevine_pssh == d.psshList[WIDEVINE_SYSID]
    assert d.playready_pssh == d.psshList[PLAYREADY_SYSID]
